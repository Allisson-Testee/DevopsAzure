trigger:
  branches:
    include:
    - master
    - rel/*
  paths:
    exclude:
    - '**/*.md'
    - 'UITests/*'

pr:
  branches:
    include:
    - master
    - rel/*
  paths:
    exclude:
    - '**/*.md'
    - 'UITests/*'

variables: 
  BuildConfiguration: Release
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
- job: Build
  pool:
    name: Dev16Custom
    demands: msbuild

  strategy:
    matrix:
      Channel_Release:
        ChannelName: Release
        DistributionUrl: https://build2019devopsdemo.z13.web.core.windows.net/WpfCoreApp
        MsixPackageId: WpfCoreApp.DevOpsDemo
        MsixPublisherId: CN=build
        MsixPackageDisplayName: WpfCoreApp
      Channel_CI:
        ChannelName: CI
        DistributionUrl: https://build2019devopsdemo.z13.web.core.windows.net/CI
        MsixPackageId: WpfCoreApp.DevOpsDemo.CI
        MsixPublisherId: CN=build
        MsixPackageDisplayName: WpfCoreApp (CI)

  steps:
  - script: nbgv cloud -c
    displayName: Set Version

  - powershell: |
      # Update appxmanifest. This must be done before build.
      # Set the per-channel values into the appxmanifest, replacing the checked-in values
      $doc = Get-Content ".\WpfCoreApp.Package\Package.appxmanifest" |
      % { $_.Replace("1.0.0", "$(GitBuildVersionSimple)").
             Replace("WpfCoreApp.DevOpsDemo.local", "$(MsixPackageId)").
             Replace("WpfCoreApp (Local)", "$(MsixPackageDisplayName)").
             Replace("CN=build", "$(MsixPublisherId)")
        } 
      Set-Content ".\WpfCoreApp.Package\Package.appxmanifest" -Value $doc

    displayName: Update manifest version

  - powershell: |
      # Update App Insights instrumentation key
      $doc = Get-Content ".\WpfCoreApp\app.config"    
      $doc | % { $_.Replace("__AppInsightsKey__", "$(AppInsightsKey)") } | Set-Content ".\WpfCoreApp\app.config"

    displayName: Set AppInsights Config
    env:
      AppInsightsKey: $(AppInsightsKey)
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['AppInsightsKey'], '')))

  - task: MSBuild@1
    displayName: Build for $(BuildConfiguration)
    inputs:
      solution: WpfCoreApp.sln
      platform: x86
      msbuildArguments: /restore /p:AppInstallerUri=$(DistributionUrl)
      configuration: $(BuildConfiguration)
      maximumCpuCount: false

  - script: copy build.cer WpfCoreApp.Package\AppPackages\WpfCoreApp.Package_$(GitBuildVersionSimple).0_Test\WpfCoreApp.Package_$(GitBuildVersionSimple).0_x86.cer
    displayName: Copy Certificate to versioned dir

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: $(ChannelName)
      targetPath: WpfCoreApp.Package/AppPackages

